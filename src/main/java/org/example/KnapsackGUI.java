package org.example;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class KnapsackGUI {
    private JPanel panel1;
    private JTextField numberField;
    private JTextArea resultTextArea;
    private JLabel numberLabel;
    private JLabel seedLabel;
    private JTextField seedField;
    private JLabel capacityLabel;
    private JTextField capacityField;
    private JTextArea itemsTextArea;
    private JButton calculateButton;

    public KnapsackGUI() {
        calculateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String numberText = numberField.getText();
                String seedText = seedField.getText();
                String capacityText = capacityField.getText();

                if (!isNumeric(numberText) || !isNumeric(seedText) || !isNumeric(capacityText)) {
                    JOptionPane.showMessageDialog(panel1, "All inputs must be numeric values.", "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                int number = Integer.parseInt(numberField.getText());
                int seed = Integer.parseInt(seedField.getText());
                int capacity = Integer.parseInt(capacityField.getText());

                if (number <= 0) {
                    JOptionPane.showMessageDialog(panel1, "Number must be greater than zero.", "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (capacity <= 0) {
                    JOptionPane.showMessageDialog(panel1, "Capacity must be greater than zero.", "Input Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (seed < 0) {
                    JOptionPane.showMessageDialog(panel1, "Seed must be a non-negative integer.", "Input Error", JOptionPane.ERROR_MESSAGE);
                }

                Problem problem = new Problem(number, seed, 1, 10);

                itemsTextArea.setText("Items:\n");
                for (Item item : problem.getItems()) {
                    itemsTextArea.append(String.format("No: %d value: %d weight: %d%n", item.getIndex(), item.getValue(), item.getWeight()));
                }

                Result result = problem.solve(capacity);

                resultTextArea.setText(result.toString());
            }
        });
    }

    private boolean isNumeric(String str) {
        try {
            Integer.parseInt(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("KnapsackGUI");
        frame.setContentPane(new KnapsackGUI().panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setPreferredSize(new Dimension(800, 600));
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        numberField = new JTextField();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(numberField, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(spacer1, gbc);
        numberLabel = new JLabel();
        numberLabel.setText("Number of items");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.NORTHWEST;
        panel1.add(numberLabel, gbc);
        seedLabel = new JLabel();
        seedLabel.setText("Seed");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(seedLabel, gbc);
        seedField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(seedField, gbc);
        capacityLabel = new JLabel();
        capacityLabel.setText("Capacity");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(capacityLabel, gbc);
        capacityField = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(capacityField, gbc);
        calculateButton = new JButton();
        calculateButton.setText("Button");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(calculateButton, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 11;
        gbc.weighty = 40.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(scrollPane1, gbc);
        itemsTextArea = new JTextArea();
        itemsTextArea.setEditable(false);
        scrollPane1.setViewportView(itemsTextArea);
        final JScrollPane scrollPane2 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.gridheight = 12;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(scrollPane2, gbc);
        resultTextArea = new JTextArea();
        resultTextArea.setEditable(false);
        scrollPane2.setViewportView(resultTextArea);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weighty = 0.1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.weighty = 0.1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 8;
        gbc.weighty = 0.1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 10;
        gbc.weighty = 0.1;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer5, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
